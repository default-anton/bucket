version: "3.7"

services:
  jellyfin:
    container_name: jellyfin
    image: ghcr.io/hotio/jellyfin
    # https://jellyfin.org/docs/general/administration/hardware-acceleration/amd
    group_add:
      - "109" # render host group id
      - "44" # video host group id
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/kfd:/dev/kfd
    ports:
      - "8096:8096"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - ROC_ENABLE_PRE_VEGA=1
      - TZ
    volumes:
      - /home/anton/jellyfin/config:/config
      - /home/anton/bucket/media:/data/media
      - /mnt/data/media:/data2/media
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck:
      test: ["CMD-SHELL", "curl -Lk -fsS http://localhost:8096/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
      start_interval: 10s
  jellyseerr:
    container_name: jellyseerr
    image: ghcr.io/hotio/jellyseerr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/jellyseerr/config:/config
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck: &default_healthcheck
      test: ["CMD-SHELL", "ping -c1 $(echo $WIREGUARD_ADDRESSES | cut -d'/' -f1) || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
      start_interval: 10s
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/sonarr/config:/config
      - /home/anton/bucket:/data
      - /mnt/data:/data2
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck: *default_healthcheck
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/radarr/config:/config
      - /home/anton/bucket:/data
      - /mnt/data:/data2
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck: *default_healthcheck
  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:nightly
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/prowlarr/config:/config
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck: *default_healthcheck
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - WEBUI_PORT=8080
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/qbittorrent/config:/config
      - /home/anton/bucket/torrents:/data/torrents
      - /mnt/data/torrents:/data2/torrents
      - /home/anton/bucket/on_torrent_finished.sh:/data2/on_torrent_finished.sh
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck: *default_healthcheck
  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    ports:
      - 5055:5055 # jellyseerr
      - 7878:7878 # radarr
      - 8989:8989 # sonarr
      - 8080:8080 # qbittorrent
      - 9696:9696 # prowlarr
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - UPDATER_PERIOD=12h
      - DOT=off
      - BLOCK_MALICIOUS=off
      - WIREGUARD_PRIVATE_KEY
      - WIREGUARD_ADDRESSES
      - SERVER_CITIES
      - OWNED_ONLY
    restart: unless-stopped
  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    volumes:
      - /home/anton/bucket/torrents:/srv
      - /home/anton/bucket/filebrowser/database:/database
      - /home/anton/bucket/filebrowser/config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ
    ports:
      - "8081:80"
    restart: unless-stopped
  rapirabooks:
    container_name: rapirabooks
    build:
      context: ./rapirabooks
      dockerfile: Dockerfile
    environment:
      - PUID=1000
      - PGID=1000
      - TZ
      - RAPIRA_BOOKS_DOWNLOAD_TO=/data/torrents/books/inbox
      - RAPIRA_BOOKS_MONITOR_FINISHED_DOWNLOADS=/data/torrents/books
      - RAPIRA_BOOKS_REFRESH_INTERVAL_IN_SEC=30
      - RAPIRA_BOOKS_FILE_SERVER_ADDRESS
      - RAPIRA_BOOKS_TELEGRAM_BOT_TOKEN
      - RAPIRA_BOOKS_USERS
    volumes:
      - /home/anton/bucket/torrents/books:/data/torrents/books
    restart: unless-stopped
