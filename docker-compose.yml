version: "3.7"

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      - TZ
      - WEBPASSWORD
    volumes:
       - '/home/anton/etc-pihole/:/etc/pihole/'
       - '/home/anton/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.rule=Host(`pi.gg`)
      - traefik.http.routers.pihole.entrypoints=web
      - traefik.http.routers.pihole.service=pihole-service
      - traefik.http.services.pihole-service.loadbalancer.server.port=80
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped
  jellyfin:
    container_name: jellyfin
    image: ghcr.io/hotio/jellyfin
    # https://jellyfin.org/docs/general/administration/hardware-acceleration/amd
    group_add:
      - "109" # render host group id
      - "44" # video host group id
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/kfd:/dev/kfd
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - ROC_ENABLE_PRE_VEGA=1
      - TZ
    volumes:
      - /home/anton/jellyfin/config:/config
      - /home/anton/bucket/media:/data/media
      - /mnt/data/media:/data2/media
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -Lk -fsS http://localhost:8096/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    labels:
      - "autoheal=true"
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`tv.gg`)
      - traefik.http.routers.jellyfin.entrypoints=web
      - traefik.http.routers.jellyfin.service=jellyfin-service
      - traefik.http.services.jellyfin-service.loadbalancer.server.port=8096
  jellyseerr:
    container_name: jellyseerr
    image: ghcr.io/hotio/jellyseerr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/jellyseerr/config:/config
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck:
      test: ["CMD-SHELL", "curl -Lk -fsS http://localhost:5055/login || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/sonarr/config:/config
      - /home/anton/bucket:/data
      - /mnt/data:/data2
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck:
      test: ["CMD-SHELL", "curl -Lk -fsS http://localhost:8989/ping || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/radarr/config:/config
      - /home/anton/bucket:/data
      - /mnt/data:/data2
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck:
      test: ["CMD-SHELL", "curl -Lk -fsS http://localhost:7878/ping || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:nightly
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/prowlarr/config:/config
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
    healthcheck:
      test: ["CMD-SHELL", "curl -Lk -fsS http://localhost:9696/ping || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - WEBUI_PORT=8080
      - TZ
      - WIREGUARD_ADDRESSES
    volumes:
      - /home/anton/qbittorrent/config:/config
      - /home/anton/bucket/torrents:/data/torrents
      - /mnt/data/torrents:/data2/torrents
      - /home/anton/bucket/on_torrent_finished.sh:/data2/on_torrent_finished.sh
    network_mode: "container:gluetun"
    restart: unless-stopped
    labels:
      - "autoheal=true"
  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyseerr.rule=Host(`req.gg`)
      - traefik.http.routers.jellyseerr.entrypoints=web
      - traefik.http.routers.jellyseerr.service=jellyseerr-service
      - traefik.http.services.jellyseerr-service.loadbalancer.server.port=5055

      - traefik.http.routers.radarr.rule=Host(`radarr.gg`)
      - traefik.http.routers.radarr.entrypoints=web
      - traefik.http.routers.radarr.service=radarr-service
      - traefik.http.services.radarr-service.loadbalancer.server.port=7878

      - traefik.http.routers.sonarr.rule=Host(`sonarr.gg`)
      - traefik.http.routers.sonarr.entrypoints=web
      - traefik.http.routers.sonarr.service=sonarr-service
      - traefik.http.services.sonarr-service.loadbalancer.server.port=8989

      - traefik.http.routers.qbittorrent.rule=Host(`torrents.gg`)
      - traefik.http.routers.qbittorrent.entrypoints=web
      - traefik.http.routers.qbittorrent.service=qbittorrent-service
      - traefik.http.services.qbittorrent-service.loadbalancer.server.port=8080

      - traefik.http.routers.prowlarr.rule=Host(`index.gg`)
      - traefik.http.routers.prowlarr.entrypoints=web
      - traefik.http.routers.prowlarr.service=prowlarr-service
      - traefik.http.services.prowlarr-service.loadbalancer.server.port=9696
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - UPDATER_PERIOD=12h
      - DOT=off
      - BLOCK_MALICIOUS=off
      - WIREGUARD_PRIVATE_KEY
      - WIREGUARD_ADDRESSES
      - SERVER_CITIES
      - OWNED_ONLY
    restart: unless-stopped
  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    volumes:
      - /home/anton/bucket/torrents:/srv
      - /home/anton/bucket/filebrowser/database:/database
      - /home/anton/bucket/filebrowser/config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ
      - FB_BASE_URL=http://rapira.gg
    ports:
      - "8081:80"
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.filebrowser.rule=Host(`rapira.gg`)
      - traefik.http.routers.filebrowser.entrypoints=web
      - traefik.http.routers.filebrowser.service=filebrowser-service
      - traefik.http.services.filebrowser-service.loadbalancer.server.port=80
  rapirabooks:
    container_name: rapirabooks
    build:
      context: ./rapirabooks
      dockerfile: Dockerfile
    environment:
      - PUID=1000
      - PGID=1000
      - TZ
      - RAPIRA_BOOKS_DOWNLOAD_TO=/data/torrents/books/inbox
      - RAPIRA_BOOKS_MONITOR_FINISHED_DOWNLOADS=/data/torrents/books
      - RAPIRA_BOOKS_REFRESH_INTERVAL_IN_SEC=30
      - RAPIRA_BOOKS_FILE_SERVER_ADDRESS
      - RAPIRA_BOOKS_TELEGRAM_BOT_TOKEN
      - RAPIRA_BOOKS_USERS
    volumes:
      - /home/anton/bucket/torrents/books:/data/torrents/books
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "if [ $(($(date +%s) - $(date -d \"$(tail -n 1 /app/health/last_scan.ts)\" +%s))) -gt 60 ] || [ $(($(date +%s) - $(date -d \"$(tail -n 1 /app/health/last_update.ts)\" +%s))) -gt 60 ]; then exit 1; else exit 0; fi"]
      interval: 60s
      timeout: 1s
      retries: 3
      start_period: 10s
